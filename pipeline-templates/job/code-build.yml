parameters:
  SolutionBaseName:
  BuildConfiguration:

jobs:
- job: CodeBuild
  dependsOn: DacpacBuild
  pool:
    name: DAS - Continuous Integration Agents
    workspace:
      clean: all
  variables:
  - group: BUILD Management Resources
  steps:

  - bash: |
      sudo npm install -g azurite
      sudo mkdir azurite
      sudo azurite --silent --location azurite --debug azurite\debug.log &
    displayName: 'Install and Run Azurite'

  # - task: VSBuild@1
  #   displayName: Build DACPAC
  #   inputs:
  #     solution: src/Database/SFA.DAS.Funding.ApprenticeshipEarnings.Database.sqlproj
  #     platform: any cpu
  #     configuration: release
  #     msbuildArgs: /p:PackageLocation="$(build.artifactstagingdirectory)/publish"

  # - task: CmdLine@2
  #   displayName: 'Install MsSqlLocalDb'
  #   inputs:
  #     script: 'choco install sqllocaldb -y && refreshenv && sqllocaldb start mssqllocaldb'
  #     failOnStderr: true

  - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks

  - task: DownloadBuildArtifacts@1
    displayName: Copy Dac For Acceptance Tests
    inputs:
      buildType: 'current' # 'current' | 'specific'. Required. Download artifacts produced by. Default: current.
      downloadType: 'specific' # 'single' | 'specific'. Required. Download type. Default: single.
      itemPattern: '**.dacpac' # string. Matching pattern. Default: **.
      downloadPath: 'src/Database/bin/release'

  - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks
    parameters:
      RunAcceptanceTests: true
      ContinueOnVulnerablePackageScanError: true # TEMP - DO NOT APPROVE PR WITH THIS IN PLACE

  - task: DotNetCoreCLI@2
    displayName: Publish - dotnet publish Inner Api
    inputs:
      command: publish
      publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
      projects: src/InnerApi/${{ parameters.SolutionBaseName }}.InnerApi.csproj
      arguments: -o $(build.artifactstagingdirectory)/publish -c ${{ parameters.BuildConfiguration }} --no-build
      modifyOutputPath: true
      zipAfterPublish: true

  - task: DotNetCoreCLI@2
    displayName: Publish - dotnet publish Durable Entities
    inputs:
      command: publish
      publishWebProjects: false #set to false as this setting (which defaults to true) will parse the entire repo for web projects
      projects: src/DurableEntities/${{ parameters.SolutionBaseName }}.DurableEntities.csproj
      arguments: -o $(build.artifactstagingdirectory)/publish -c ${{ parameters.BuildConfiguration }} --no-build
      modifyOutputPath: true
      zipAfterPublish: true

  - task: CopyFiles@2
    displayName: Copy Files to $(build.artifactstagingdirectory)/publish
    inputs:
      Contents: |
        azure/**
      TargetFolder: $(build.artifactstagingdirectory)/publish
      OverWrite: true

  - task: PublishPipelineArtifact@1
    displayName: Publish Build Artifact
    inputs:
      targetPath: $(build.artifactstagingdirectory)/publish
      artifactName: ${{ parameters.SolutionBaseName }}
  
  - template: azure-pipelines-templates/build/step/nuget-pack.yml@das-platform-building-blocks
    parameters:
      DotNetStandardPackagesToPack: |
        src/Types/${{ parameters.SolutionBaseName }}.Types.csproj;